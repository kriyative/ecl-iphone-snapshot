/*
    config.h.in -- Template configuration file.
*/
/*
    Copyright (c) 1990, Giuseppe Attardi.
    Copyright (c) 2001, Juan Jose Garcia Ripoll.

    ECoLisp is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
    License as published by the Free Software Foundation; either
    version 2 of the License, or (at your option) any later version.

    See file '../Copyright' for full details.
*/

/*
 * If ECL_API has been predefined, that means we are building the core
 * library and, under windows, we must tell the compiler to export
 * extern functions from the shared library.
 * If ECL_API is not defined, we are simply building an application that
 * uses ECL and, under windows, we must tell the compiler that certain
 * will be imported from a DLL.
 */
#if defined(mingw32) || defined(_MSC_VER) || defined(cygwin)
# define ECL_DLLEXPORT __declspec(dllexport)
# ifdef ECL_API
#  undef ECL_API
#  define ECL_API __declspec(dllexport)
# else
#  define ECL_API __declspec(dllimport)
# endif
#else
# define ECL_DLLEXPORT
# ifdef ECL_API
#  undef ECL_API
# endif
# define ECL_API
#endif

/* Decimal number made with the formula yymmvv */
#define ECL_VERSION_NUMBER @ECL_VERSION_NUMBER@

/*
 * FEATURES LINKED IN
 */
/* Always use CLOS							*/
#define CLOS

/* Use GNU Multiple Precision library for bignums                       */ 
#define WITH_GMP 1
#include <ecl/gmp.h>

/* Userland threads?							*/
#define ECL_THREADS @ECL_THREADS@
#if ECL_THREADS
# define GC_WIN32_THREADS
# define GC_THREADS
# define ECL_WINDOWS_THREADS
#else
# undef ECL_THREADS
#endif

/* __thread thread-local variables?                                     */
/* #undef WITH___THREAD */

/* Use Boehm's garbage collector					*/
#define GBC_BOEHM 0
#ifdef GBC_BOEHM
# define GC_WIN32_THREADS	/* For older versions */
# define GC_THREADS             /* For >= 7.2 */
# include <ecl/gc/gc.h>
# define ECL_DYNAMIC_VV
#endif

/* Network streams							*/
#define TCP 1
#if defined(TCP) && (defined(_MSC_VER) || defined(mingw32))
# define ECL_WSOCK
#endif

/* Foreign functions interface						*/
#define ECL_FFI

/* Support for Unicode strings */
#define ECL_UNICODE @ECL_UNICODE@
#if !ECL_UNICODE
# undef ECL_UNICODE
#endif

/* Allow STREAM operations to work on arbitrary objects			*/
#define ECL_CLOS_STREAMS 1

/* Stack grows downwards						*/
#define ECL_DOWN_STACK 1

/* We have libffi and can use it                                        */
/*#undef HAVE_LIBFFI*/

/* We have non-portable implementation of FFI calls			*/
/* Only used as a last resort, when libffi is missin                    */
#ifndef HAVE_LIBFFI
#define ECL_DYNAMIC_FFI 1
#endif

/* We have non-portable implementation of FFI calls			*/
#define ECL_DYNAMIC_FFI 1

/* We use hierarchical package names, like in Allegro CL                */
#define ECL_RELATIVE_PACKAGE_NAMES 1

/* Use mprotect for fast interrupt dispatch				*/
/* #undef ECL_USE_MPROTECT */
#if defined(_MSC_VER) || defined(mingw32)
# define ECL_USE_GUARD_PAGE
#endif

/* Integer types                        				*/
#define ecl_uint8_t unsigned char
#define ecl_int8_t char
#define ecl_uint16_t unsigned short
#define ecl_int16_t short
#define ecl_uint32_t unsigned int
#define ecl_int32_t int
/* #undef ecl_uint64_t */
/* #undef ecl_int64_t */
/* #undef ecl_long_long_t */
/* #undef ecl_ulong_long_t */

/*
 * C TYPES AND SYSTEM LIMITS
 */
/*
 * The integer type
 *
 * cl_fixnum must be an integer type, large enough to hold a pointer.
 * Ideally, according to the ISOC99 standard, we should use intptr_t,
 * but the required headers are not present in all systems. Hence we
 * use autoconf to guess the following values.
 */
#define ECL_INT_BITS		32
#define ECL_LONG_BITS		32
#define FIXNUM_BITS		32
#define MOST_POSITIVE_FIXNUM	((cl_fixnum)536870911)
#define MOST_NEGATIVE_FIXNUM	((cl_fixnum)-536870912)

typedef int cl_fixnum;
typedef unsigned int cl_index;
typedef unsigned int cl_hashkey;

/*
 * The character type
 */
#ifdef ECL_UNICODE
#define	CHAR_CODE_LIMIT	1114112	/*  unicode character code limit  */
#else
#define	CHAR_CODE_LIMIT	256	/*  unicode character code limit  */
#endif

/*
 * Array limits
 */
#define	ARANKLIM	64		/*  array rank limit  		*/
#ifdef GBC_BOEHM
#define	ADIMLIM		536870911	/*  array dimension limit	*/
#define	ATOTLIM		536870911	/*  array total limit		*/
#else
#define	ADIMLIM		16*1024*1024	/*  array dimension limit	*/
#define	ATOTLIM		16*1024*1024	/*  array total limit		*/
#endif

/*
 * Function limits.
 *
 * In general, any of these limits must fit in a "signed int".
 */
/*	Maximum number of function arguments 				*/
#define CALL_ARGUMENTS_LIMIT 65536

/*	Maximum number of required arguments				*/
#define LAMBDA_PARAMETERS_LIMIT CALL_ARGUMENTS_LIMIT

/*	Numb. of args. which can be passed using the C stack		*/
/*	See cmplam.lsp if you change this value				*/
#define C_ARGUMENTS_LIMIT 64

/*	Maximum number of output arguments				*/
#define ECL_MULTIPLE_VALUES_LIMIT 64

/* A setjmp that does not save signals					*/
#define ecl_setjmp	setjmp
#define ecl_longjmp	longjmp

/*
 * Structure/Instance limits. The index to a slot must fit in the
 * "int" type. We also require ECL_SLOTS_LIMIT <= CALL_ARGUMENTS_LIMIT
 * because constructors typically require as many arguments as slots,
 * or more.
 */
#define ECL_SLOTS_LIMIT	32768

/* compiler understands long double                                     */
/* #undef HAVE_LONG_DOUBLE */
#ifdef HAVE_LONG_DOUBLE
# define ECL_LONG_FLOAT
#endif
/* compiler understands complex                                         */
/* #undef HAVE_DOUBLE_COMPLEX */
/* #undef HAVE_FLOAT_COMPLEX */

/* Missing integer types */
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;

/* We can use small, two-words conses, without type information		*/
/* #undef ECL_SMALL_CONS */

/* -CUT-: Everything below this mark will not be installed		*/
/* -------------------------------------------------------------------- *
 *	BUILD OPTIONS WHICH NEED NOT BE EXPORTED			*
 * -------------------------------------------------------------------- */
/*
 * FEATURES LINKED IN:
 */

/* CLX									*/
#define CLX 1
/* Locatives								*/
/* #undef LOCATIVE */
/* Use old MIT LOOP macro system					*/
/* #undef ECL_OLD_LOOP */

/* Define this if you want a runtime version only without compiler	*/
/* #undef RUNTIME */
/* Profile tool								*/
/* #undef PROFILE */
/* Program Development Environment					*/
/* #undef PDE */

/* Allow loading dynamically linked code				*/
#define ENABLE_DLOPEN 1

/* Undefine this if you do not want ECL to check for circular lists	*/
#define ECL_SAFE

/* Use CMU Common-Lisp's FORMAT routine					*/
#define ECL_CMU_FORMAT 1

/* Bytecodes and arguments are 8 and 16 bits large, respectively	*/
/* #undef ECL_SMALL_BYTECODES */

/* Assembler implementation of APPLY and friends			*/
/* #undef ECL_ASM_APPLY */

/* Activate Boehm-Weiser incremental garbage collector			*/
/* #undef GBC_BOEHM_GENGC */

/*
 * SYSTEM FEATURES:
 */

/* Arguments cannot be accessed as array				*/
/* #undef NO_ARGS_ARRAY */
/* Most significant byte first						*/
/* #undef WORDS_BIGENDIAN */
/* Has <sys/resource.h>							*/
/* #undef HAVE_SYS_RESOURCE_H */
/* #undef HAVE_ULIMIT_H */
/* High precision timer							*/
/* #undef HAVE_NANOSLEEP */
/* Float version if isnan()						*/
/* #undef HAVE_ISNANF */
/* float.h for epsilons, maximum real numbers, etc			*/
#define HAVE_FLOAT_H 1
/* select()								*/
/* #undef HAVE_SELECT */
/* #undef HAVE_SYS_SELECT_H */
/* #undef HAVE_SYS_IOCTL_H */
/* putenv() or setenv()							*/
#undef HAVE_SETENV
#define HAVE_PUTENV 1
/* times() and sys/times.h						*/
/* #undef HAVE_TIMES */
/* gettimeofday() and sys/time.h					*/
/* #undef HAVE_GETTIMEOFDAY */
/* getrusage() and sys/resource.h					*/
/* #undef HAVE_GETRUSAGE */
/* user home directory, user name, etc...				*/
/* #undef HAVE_PW_H */
/* symbolic links and checking their existence				*/
/* #undef HAVE_LSTAT */
/* safe creation of temporary files					*/
/* #undef HAVE_MKSTEMP */
/* timer for userland threads						*/
/* #undef HAVE_ALARM */
/* filesytem								*/
/* #undef HAVE_DIRENT_H */
/* dynamic linking of libraries						*/
/* #undef HAVE_DLFCN_H */
/* #undef HAVE_LINK_H */
/* #undef HAVE_MACH_O_DYLD_H */
/* POSIX signals							*/
/* #undef HAVE_SIGPROCMASK */
/* isatty() checks whether a file is connected to a                     */ 
#define HAVE_ISATTY  1 
/* can manipulate floating point environment				*/
/* #undef HAVE_FENV_H */
/* can activate individual traps in floating point environment		*/
/* #undef HAVE_FEENABLEEXCEPT */
/* do we want to deactivate all support for floating point exceptions   */
/* #undef ECL_AVOID_FPE_H */
/* do we want to have signed zeros					*/
#define ECL_SIGNED_ZERO 1
/* do we want NaNs and Infs						*/
#define ECL_IEEE_FP 1
/* has support for large files						*/
/* #undef HAVE_FSEEKO */
/* compiler understands long long                                       */ 
#define HAVE_LONG_LONG 1
/* the tzset() function gets the current time zone			*/
#define HAVE_TZSET 1
/* several floating point functions (ISO C99)				*/
#if 0
#undef HAVE_EXPF
#undef HAVE_LOGF
#undef HAVE_SQRTF
#undef HAVE_COSF
#undef HAVE_SINF
#undef HAVE_TANF
#undef HAVE_SINHF
#undef HAVE_COSHF
#undef HAVE_TANHF
#endif
#define HAVE_FLOORF
#define HAVE_CEILF
#define HAVE_FABSF
#define HAVE_FREXPF
#define HAVE_LDEXPF
#define HAVE_LOG1PL
/* whether we have sched_yield() that gives priority to other threads	*/
/* #undef HAVE_SCHED_YIELD */
/* uname() for system identification					*/
/* #undef HAVE_UNAME */
/* #undef HAVE_UNISTD_H */
/* #undef HAVE_SYS_WAIT_H */
/* size of long long            					*/
/* #undef ECL_LONG_LONG_BITS */

/*
 * we do not manage to get proper signal handling of floating point
 * arithmetics in the Alpha chips.
 */
#if defined(__alpha__)
# ifdef HAVE_FENV_H
#  undef HAVE_FENV_H
# endif
# ifdef HAVE_FEENABLEEXCEPT
#  undef HAVE_FEENABLEEXCEPT
# endif
#endif

/* what characters are used to mark beginning of new line		*/
#define ECL_NEWLINE_IS_CRLF 1
/* #undef ECL_NEWLINE_IS_LFCR */

/*
 * PARAMETERS:
 */

/*
 * Memory limits for the old garbage collector.
 */
#define	LISP_PAGESIZE	2048	/* Page size in bytes			*/
#define MAXPAGE	16384		/* Maximum Memory Size			*/

/* We reserve these many bytes for computation with bignums registers	*/
#define BIGNUM_REGISTER_SIZE 16

/* We allocate a number of strings in a pool which is used to speed up reading */
#define ECL_MAX_STRING_POOL_SIZE	10
#define ECL_BUFFER_STRING_SIZE		128

/*
 * Macros that depend on these system features.
 */
#if defined(sparc) || defined(i386) || defined(mips)
#  define	stack_align(n)	(((n) + 0x7) & ~0x7)
#else
#  define	stack_align(n)	(((n) + 03) & ~03)
#endif

/* #undef FILE_CNT */
#if 0 == 1
#  define FILE_CNT(fp)	((fp)->_IO_read_end - (fp)->_IO_read_ptr)
#endif
#if 0 == 2
#  define FILE_CNT(fp)	((fp)->_r)
#endif
#if 3 == 3
#  define FILE_CNT(fp)	((fp)->_cnt)
#endif

#if defined(cygwin) || defined(mingw32) || defined(_MSC_VER)
#  define IS_DIR_SEPARATOR(x) ((x=='/')||(x=='\\'))
#  define DIR_SEPARATOR		'/'
#  define PATH_SEPARATOR	';'
#else
#  define IS_DIR_SEPARATOR(x) (x=='/')
#  define DIR_SEPARATOR	'/'
#  define PATH_SEPARATOR	':'
#endif

#define ECL_ARCHITECTURE "PENTIUM4"

#ifdef ECL_AVOID_FPE_H
# define ecl_detect_fpe()
#else
# include "@ECL_FPE_CODE@"
#endif

#define strcasecmp _stricmp
#define isnan _isnan
#define finite _finite
#define sleep _sleep

#include "@ECL_FPE_CODE@"

#include <math.h>
#ifndef isfinite
# define isfinite(x) (finite(x))
# define signbit(x) (_copysign(1.0,(x)) < 0)
# define ECL_MATHERR_CLEAR
# define ECL_MATHERR_TEST
#endif
