(replace-in-files '(("s.s_dbind" . "symbol.dbind")
		    ("s.s_sfdef" . "symbol.sfdef")
		    ("s.s_gfdef" . "symbol.gfdef")
		    ("s.s_self"  . "symbol.self")
		    ("s.s_fillp" . "symbol.fillp")
		    ("s.s_plist" . "symbol.plist")
		    ("s.s_hpack" . "symbol.hpack")
		    ("s.s_stype" . "symbol.stype")
		    ("s.s_mflag" . "symbol.mflag"))
		  ecl-files)

(replace-in-files '(("st.st_adjustable" . "string.adjustable")
		    ("st.st_hasfillp"   . "string.hasfillp")
		    ("st.st_displaced"  . "string.displaced")
		    ("st.st_dim"        . "string.dim")
		    ("st.st_fillp"      . "string.fillp")
		    ("st.st_self"       . "string.self"))
		  ecl-files)

(replace-in-files '(("ust.ust_adjustable" . "string.adjustable")
		    ("ust.ust_hasfillp"   . "string.hasfillp")
		    ("ust.ust_displaced"  . "string.displaced")
		    ("ust.ust_dim"        . "string.dim")
		    ("ust.ust_fillp"      . "string.fillp")
		    ("ust.ust_self"       . "string.self"))
		  ecl-files)

(replace-in-files '(("p.p_name"        . "pack.name")
		    ("p.p_nicknames"   . "pack.nicknames")
		    ("p.p_shadowings"  . "pack.shadowings")
		    ("p.p_uselist"     . "pack.uses")
		    ("p.p_usedbylist"  . "pack.usedby")
		    ("p.p_internal"    . "pack.internal")
		    ("p.p_external"    . "pack.external")
		    ("p.p_link"        . "pack.link")
		    ("p.p_locked"      . "pack.locked")
		    ("c.c_car"         . "cons.car")
		    ("c.c_cdr"         . "cons.cdr"))
		  ecl-files)

(replace-in-files '(("a.a_self"       . "array.self.t")
		    ("a.a_displaced"  . "array.displaced")
		    ("a.a_adjustable" . "array.adjustable")
		    ("a.a_rank"       . "array.rank")
		    ("a.a_dim"        . "array.dim")
		    ("a.a_dims"       . "array.dims")
		    ("a.a_elttype"    . "array.elttype")

		    ("v.v_self"       . "vector.self.t")
		    ("v.v_displaced"  . "vector.displaced")
		    ("v.v_adjustable" . "vector.adjustable")
		    ("v.v_hasfillp"   . "vector.hasfillp")
		    ("v.v_dim"        . "vector.dim")
		    ("v.v_fillp"      . "vector.fillp")
		    ("v.v_elttype"    . "vector.elttype")

		    ("lfa.lfa_self"   . "array.self.lf")
		    ("lfa.lfa_"       . "array.")
		    ("sfa.sfa_self"   . "array.self.sf")
		    ("sfa.sfa_"       . "array.")
		    ("fixa.fixa_self" . "array.self.fix")
		    ("fixa.fixa_"     . "array.")
		    ("bv.bv_self"     . "vector.self.bit")
		    ("bv.bv_"         . "vector."))
		  ecl-files)

(replace-in-files '(("sm.sm_mode"    . "stream.mode")
		    ("sm.sm_fp"      . "stream.file")
		    ("sm.sm_buffer"  . "stream.buffer")
		    ("sm.sm_object0" . "stream.object0")
		    ("sm.sm_object1" . "stream.object1")
		    ("sm.sm_int0"    . "stream.int0")
		    ("sm.sm_int1"    . "stream.int1"))
		  ecl-files)

(replace-in-files '(("rat.rat_den" . "ratio.den")
		    ("rat.rat_num" . "ratio.num")
		    ("cmp.cmp_imag" . "complex.imag")
		    ("cmp.cmp_real" . "complex.real")
		    ("rnd.rnd_value" . "random.value"))
		  ecl-files)

(replace-in-files '(("pn.pn_host"     . "pathname.host")
		    ("pn.pn_device"   . "pathname.device")
		    ("pn.pn_directory". "pathname.directory")
		    ("pn.pn_name"     . "pathname.name")
		    ("pn.pn_type"     . "pathname.type")
		    ("pn.pn_version"  . "pathname.version")
		    ("pn.pn_logical"  . "pathname.logical"))
		  ecl-files)

(replace-in-files '(("ht.ht_test"     . "hash.test")
		    ("ht.ht_self"     . "hash.data")
		    ("ht.ht_rhsize"   . "hash.rehash_size")
		    ("ht.ht_rhthresh" . "hash.threshold")
		    ("ht.ht_nent"     . "hash.entries")
		    ("ht.ht_size"     . "hash.size"))
		  ecl-files)
(replace-in-files '(("hte_key" . "key")
		    ("hte_value" . "value")
		    ("struct htent" . "struct hashtable_entry"))
		  ecl-files)

(replace-in-files '(("hash.thresholdh" . "hash.threshold"))
		  ecl-files)

(replace-in-files '(("rt.rt_self"     . "readtable.table")
		    ("struct rtent"   . "struct readtable_entry")
		    ("rte_macro"      . "macro")
		    ("rte_chattrib"   . "syntax_type")
		    ("rte_dtab"       . "dispatch_table"))
		  ecl-files)

(replace-in-files '(("in.in_length"   . "instance.length")
		    ("in.in_class"    . "instance.class")
		    ("in.in_slots"    . "instance.slots"))
		  ecl-files)

(replace-in-files '(("th.th_self"     . "thread.data")
		    ("th.th_size"     . "thread.size")
		    ("th.th_fun"      . "thread.entry")
		    ("th.th_cont"     . "thread.cont")
		    ("cont.cn_thread" . "cont.thread")
		    ("cont.cn_resumed" . "cont.resumed")
		    ("cont.cn_timed_out" . "cont.timed_out"))
		  ecl-files)

(replace-in-files '(("cf.cf_name"     . "cfun.name")
		    ("cf.cf_self"     . "cfun.entry")
		    ("cf.cf_block"    . "cfun.block")
		    ("cc.cc_self"     . "cclosure.entry")
		    ("cc.cc_env"      . "cclosure.env")
		    ("cc.cc_block"    . "cclosure.block")
		    ("gf.gf_arg_no"   . "gfun.arg_no")
		    ("gf.gf_name"     . "gfun.name")
		    ("gf.gf_meth_ht"  . "gfun.method_hash")
		    ("gf.gf_spec_how" . "gfun.specializers")
		    ("gf.gf_gfun"     . "gfun.instance"))
		  ecl-files)

(replace-in-files '(("str.str_length" . "str.length")
		    ("str.str_name"   . "str.name")
		    ("str.str_self"   . "str.self"))
		  ecl-files)

(replace-in-files '((".cd_data"		. ".data")
		    ("->cd_data"	. "->data")
		    (".cd_start"	. ".start")
		    ("->cd_start"	. "->start")
		    (".cd_data"		. ".data")
		    ("->cd_data"	." ->data"))
		  ecl-files)

