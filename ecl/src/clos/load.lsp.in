;;; @configure_input@

(defvar +clos-module-files+
'("src:clos;kernel.lsp"
  "src:clos;macros.lsp"
  "src:clos;method.lsp"
  "src:clos;slot.lsp"
  "src:clos;combin.lsp"
  "src:clos;boot.lsp"
  "src:clos;defclass.lsp"
  "src:clos;standard.lsp"
  "src:clos;builtin.lsp"
  "src:clos;change.lsp"
  "src:clos;stdmethod.lsp"
  "src:clos;generic.lsp"
  "src:clos;fixup.lsp"
  "src:clos;print.lsp"
  #+clos-streams
  "src:clos;streams.lsp"
  #+cmu-format
  "src:lsp;pprint.lsp"
  "src:clos;conditions.lsp"
  "src:lsp;describe.lsp" ; Depends on conditions.lsp
  "src:clos;inspect.lsp" ; Depends on describe.lsp
  "src:lsp;top.lsp" ; Depends on conditions.lsp
  ))

(mapc #'(lambda (x)
         (terpri)
         (princ ";;; Loading ")
         (princ x)
         (load x :verbose nil))
 +clos-module-files+)

(setf +clos-module-files+ (remove "src:clos;macros.lsp" +clos-module-files+ :test #'equalp))
